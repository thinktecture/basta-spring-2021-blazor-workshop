@page "/conferences"

@using DTO = BASTAConfTool.Shared.DTO
@using BASTAConfTool.Client.Services
@using Microsoft.AspNetCore.SignalR.Client

@inject ConferencesClientService _conferencesClient
@inject NavigationManager _navigation

<h1>Conferences</h1>

<button @onclick="AddConference">Add Conference</button>
<br />
<br />


@if (_conferences == null)
{
    <p><em>Fetching conferences...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
            </tr>
        </thead>
        <tbody>
            <Virtualize Items="@_conferences" Context="conf">
                <tr @onclick="() => LoadDetails(conf.ID)" @key="conf.ID">
                    <td>@conf.Title</td>
                </tr>
            </Virtualize>

        </tbody>
    </table>
}

@code {
    private List<DTO.ConferenceOverview> _conferences;
    private HubConnection _hubConnection;

    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder()
               .WithUrl(_navigation.ToAbsoluteUri("/conferencesHub"))
               .Build();

        _hubConnection.On("NewConferenceAdded", async () =>
        {
            _conferences = await ListConferences();
            StateHasChanged();
            // ...
        });

        await _hubConnection.StartAsync();

        _conferences = await ListConferences();
    }

    private async Task<List<DTO.ConferenceOverview>> ListConferences()
    {
        return await _conferencesClient.GetConferencesAsync();
    }

    private void LoadDetails(Guid id)
    {
        _navigation.NavigateTo("conferences/show/" + id);
    }

    private void AddConference()
    {
        _navigation.NavigateTo("conferences/new");
    }
}
